{"id":"hf6q","dependencies":[{"name":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\package.json","includedInParent":true,"mtime":1623010948488},{"name":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\date-fns\\esm\\isValid\\package.json","includedInParent":true,"mtime":1622553663727},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\date-fns\\esm\\toDate\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25},"parent":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=u;var e=t(require(\"../toDate/index.js\")),r=t(require(\"../_lib/requiredArgs/index.js\"));function t(e){return e&&e.__esModule?e:{default:e}}function u(t){(0,r.default)(1,arguments);var u=(0,e.default)(t);return!isNaN(u)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":13}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":20}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":35}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":43}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":56}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":57}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":64}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":68}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":76}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":84}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":125}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":127}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":129}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":171}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":180}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":182}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":185}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":192}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":195}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":197}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":208}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":210}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":211}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1},"generated":{"line":1,"column":219}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":15},"generated":{"line":1,"column":222}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"isValid","original":{"line":61,"column":24},"generated":{"line":1,"column":231}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"dirtyDate","original":{"line":61,"column":32},"generated":{"line":1,"column":233}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":15},"generated":{"line":1,"column":237}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":15},"generated":{"line":1,"column":239}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":15},"generated":{"line":1,"column":241}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":15},"generated":{"line":1,"column":250}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"arguments","original":{"line":62,"column":18},"generated":{"line":1,"column":252}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"date","original":{"line":63,"column":6},"generated":{"line":1,"column":263}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"date","original":{"line":63,"column":6},"generated":{"line":1,"column":267}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":13},"generated":{"line":1,"column":270}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"dirtyDate","original":{"line":63,"column":20},"generated":{"line":1,"column":272}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"dirtyDate","original":{"line":63,"column":20},"generated":{"line":1,"column":274}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"dirtyDate","original":{"line":63,"column":20},"generated":{"line":1,"column":283}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":9},"generated":{"line":1,"column":286}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"isNaN","original":{"line":64,"column":10},"generated":{"line":1,"column":293}},{"source":"../../node_modules/date-fns/esm/isValid/index.js","name":"date","original":{"line":64,"column":16},"generated":{"line":1,"column":299}}],"sources":{"../../node_modules/date-fns/esm/isValid/index.js":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}"},"lineCount":null}},"error":null,"hash":"02088420d43158f831606d031e9c52b1","cacheData":{"env":{}}}