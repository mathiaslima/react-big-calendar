{"id":"LIrU","dependencies":[{"name":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\package.json","includedInParent":true,"mtime":1623010948488},{"name":"C:\\Users\\mathi\\Documents\\Projetos\\Pessoais\\react-big-calendar\\react-big-calendar\\node_modules\\@material-ui\\styles\\package.json","includedInParent":true,"mtime":1621459709606}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.increment=r;var e=-1e9;function r(){return e+=1}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":13}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":20}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":35}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":43}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":56}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":57}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":64}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":68}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":76}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":21,"column":1},"generated":{"line":1,"column":86}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":10,"column":0},"generated":{"line":1,"column":88}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","name":"indexCounter","original":{"line":10,"column":4},"generated":{"line":1,"column":92}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":10,"column":20},"generated":{"line":1,"column":95}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":11,"column":7},"generated":{"line":1,"column":99}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","name":"increment","original":{"line":11,"column":16},"generated":{"line":1,"column":108}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","name":"indexCounter","original":{"line":20,"column":9},"generated":{"line":1,"column":112}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","name":"indexCounter","original":{"line":12,"column":2},"generated":{"line":1,"column":119}},{"source":"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js","original":{"line":12,"column":18},"generated":{"line":1,"column":122}}],"sources":{"../../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js":"/* eslint-disable import/prefer-default-export */\n// Global index counter to preserve source order.\n// We create the style sheet during the creation of the component,\n// children are handled after the parents, so the order of style elements would be parent->child.\n// It is a problem though when a parent passes a className\n// which needs to override any child's styles.\n// StyleSheet of the child has a higher specificity, because of the source order.\n// So our solution is to render sheets them in the reverse order child->sheet, so\n// that parent has a higher specificity.\nvar indexCounter = -1e9;\nexport function increment() {\n  indexCounter += 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (indexCounter >= 0) {\n      console.warn(['Material-UI: You might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\\n'));\n    }\n  }\n\n  return indexCounter;\n}"},"lineCount":null}},"error":null,"hash":"53c8f0630941b44310b1e3d42c6bea61","cacheData":{"env":{"NODE_ENV":"production"}}}